@model ContosoSite.Models.Picture

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<style type="text/css">
    .otstup {
        padding: 5px;
    }
</style>

@using (Html.BeginForm(Html.BeginForm("Create", "Pictures", null, FormMethod.Post, new { enctype = "multipart/form-data" }))) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Picture</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exhibition_id, "Exhibition_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Exhibition_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Exhibition_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Artist_id, "Artist_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.Identity.IsAuthenticated)
                {
                    if ((string)TempData.Peek("Role") == "artist")
                    {
                       
                        @Html.LabelFor(model => model.Artist_id, (string)TempData.Peek("Login"))
                        @Html.ValidationMessageFor(model => model.Artist_id, "", new { @class = "text-danger" })
                         

                    }
                    else if ((string)TempData.Peek("Role") == "admin")
                    {
                            
                                @Html.DropDownList("Artist_id", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Artist_id, "", new { @class = "text-danger" })
                            
                            }
                            }
                        </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="upload" value="Обзор..." />
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
